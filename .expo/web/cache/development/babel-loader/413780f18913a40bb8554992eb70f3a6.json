{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport AppNav from \"./AppPages/AppNav\";\nimport WorkoutHistory from \"./AppPages/WorkoutHistory\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function App() {\n  var isDarkMode = useColorScheme() === 'dark';\n  var MyTheme = {\n    dark: true,\n    colors: {\n      primary: 'rgb(255,0, 0)',\n      background: '#695645',\n      card: 'rgb(43,33,24)',\n      text: 'rgb(255,255, 255)',\n      border: '#695645',\n      notification: 'rgb(255,255, 255)'\n    }\n  };\n  return _jsxs(NavigationContainer, {\n    theme: MyTheme,\n    children: [_jsx(StatusBar, {\n      barStyle: 'light-content'\n    }), _jsxs(Tab.Navigator, {\n      initialRouteName: \"New Workout\",\n      theme: MyTheme,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarStyle: {\n            shadowOffset: {\n              width: 0,\n              height: 8\n            },\n            shadowOpacity: 1,\n            shadowRadius: 16.0,\n            elevation: 24,\n            borderTopLeftRadius: 22,\n            borderTopRightRadius: 22,\n            backgroundColor: '#2B2118',\n            position: 'absolute',\n            bottom: 0,\n            padding: 10,\n            width: '100%',\n            height: '9.9%',\n            zIndex: 0\n          },\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size,\n                tintColor = _ref2.tintColor;\n            var iconName;\n\n            if (route.name === 'Excercises') {\n              if (focused) {\n                return _jsx(Image, {\n                  style: styles.image,\n                  resizeMode: \"contain\",\n                  source: require(\"./img/inverted-search.png\")\n                });\n              } else {\n                return _jsx(Image, {\n                  style: styles.image,\n                  resizeMode: \"contain\",\n                  source: require(\"./img/grey-search.png\")\n                });\n              }\n            } else if (route.name === 'Past Workouts') {\n              if (focused) {\n                return _jsx(Image, {\n                  style: styles.image,\n                  resizeMode: \"contain\",\n                  source: require(\"./img/inverted-chart.png\")\n                });\n              } else {\n                return _jsx(Image, {\n                  style: styles.image,\n                  resizeMode: \"contain\",\n                  source: require(\"./img/grey-chart.png\")\n                });\n              }\n            } else if (route.name === 'New Workout') {\n              if (focused) {\n                return _jsx(Image, {\n                  style: styles.image,\n                  resizeMode: \"contain\",\n                  source: require(\"./img/inverted-square-add.png\")\n                });\n              } else {\n                return _jsx(Image, {\n                  style: styles.image,\n                  resizeMode: \"contain\",\n                  source: require(\"./img/grey-square-add.png\")\n                });\n              }\n            } else if (route.name === 'Weight Room') {\n              if (focused) {\n                return _jsx(Image, {\n                  style: styles.image,\n                  resizeMode: \"contain\",\n                  source: require(\"./img/inverted-man-working.png\")\n                });\n              } else {\n                return _jsx(Image, {\n                  style: styles.image,\n                  resizeMode: \"contain\",\n                  source: require(\"./img/grey-man-working.png\")\n                });\n              }\n            } else if (route.name === 'Profile') {\n              if (focused) {\n                return _jsx(Image, {\n                  style: styles.image,\n                  resizeMode: \"contain\",\n                  source: require(\"./img/inverted-gorilla.png\")\n                });\n              } else {\n                return _jsx(Image, {\n                  style: styles.image,\n                  resizeMode: \"contain\",\n                  source: require(\"./img/grey-gorilla.png\")\n                });\n              }\n            }\n          },\n          tabBarBackgroundColor: 'white',\n          tabBarActiveTintColor: 'grey',\n          tabBarInactiveTintColor: 'grey',\n          tabBarActiveBackgroundColor: '#2B2118',\n          tabBarInactiveBackgroundColor: '#2B2118'\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Excercises\",\n        component: AppNav\n      }), _jsx(Tab.Screen, {\n        name: \"Past Workouts\",\n        component: WorkoutHistory\n      }), _jsx(Tab.Screen, {\n        name: \"New Workout\",\n        component: WorkoutHistory\n      }), _jsx(Tab.Screen, {\n        name: \"Weight Room\",\n        component: WorkoutHistory\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: WorkoutHistory\n      })]\n    })]\n  });\n};\n\nvar Tab = createBottomTabNavigator();\nvar styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    height: '100%'\n  }\n});\nexport default App;","map":{"version":3,"sources":["/Users/grahampurvis/Documents/GymChimp/App.js"],"names":["createBottomTabNavigator","NavigationContainer","React","AppNav","WorkoutHistory","App","isDarkMode","useColorScheme","MyTheme","dark","colors","primary","background","card","text","border","notification","route","tabBarStyle","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","borderTopLeftRadius","borderTopRightRadius","backgroundColor","position","bottom","padding","zIndex","tabBarIcon","focused","color","size","tintColor","iconName","name","styles","image","require","tabBarBackgroundColor","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","Tab","StyleSheet","create"],"mappings":"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","sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\n// Color theme: dark-brown: #2B2118, light brown: #695645, yellow: #EFB905\n// Card documentation: \n// navbar documentation: https://morioh.com/p/c472677920a1\n// searchbar documentation: https://callstack.github.io/react-native-paper/searchbar.html\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport type { Node } from 'react';\nimport React from 'react';\nimport { Image, StatusBar, StyleSheet, useColorScheme } from 'react-native';\nimport AppNav from './AppPages/AppNav';\nimport WorkoutHistory from './AppPages/WorkoutHistory';\n\n\n\nconst App: () => Node = () => {\n  const isDarkMode = useColorScheme() === 'dark';\n  const MyTheme = {\n    dark: true,\n    colors: {\n      primary: 'rgb(255,0, 0)',\n      background: '#695645',\n      card: 'rgb(43,33,24)',\n      text: 'rgb(255,255, 255)',\n      border: '#695645',\n      notification: 'rgb(255,255, 255)',\n    },\n  };\n  return (\n    <NavigationContainer theme={MyTheme} >\n      <StatusBar barStyle={'light-content'} />\n      <Tab.Navigator\n      initialRouteName='New Workout'\n      theme={MyTheme}\n      screenOptions={({ route }) => ({\n        tabBarStyle: {\n          shadowOffset: {\n              width: 0,\n              height: 8,\n          },\n          shadowOpacity: 1,\n          shadowRadius: 16.0,\n          elevation: 24,\n          borderTopLeftRadius: 22,\n          borderTopRightRadius: 22,\n          backgroundColor: '#2B2118',\n          position: 'absolute',\n          bottom: 0,\n          padding: 10,\n          width: '100%',\n          height: '9.9%',\n          zIndex: 0,\n      },\n        tabBarIcon: ({ focused, color, size, tintColor }) => {\n          let iconName;\n\n          if (route.name === 'Excercises') {\n            if(focused) {\n              return <Image style={styles.image}\n                resizeMode={\"contain\"}\n                source={require('./img/inverted-search.png')}\n              />;\n            }else{\n              return <Image style={styles.image}\n                resizeMode={\"contain\"}\n                source={require('./img/grey-search.png')}\n              />;\n            }\n          } else if (route.name === 'Past Workouts') {\n            if(focused) {\n              return <Image style={styles.image}\n                resizeMode={\"contain\"}\n                source={require('./img/inverted-chart.png')}\n              />;\n            }else{\n              return <Image style={styles.image}\n                resizeMode={\"contain\"}\n                source={require('./img/grey-chart.png')}\n              />;\n            }\n          } else if (route.name === 'New Workout')  {\n            if(focused) {\n              return <Image style={styles.image}\n                resizeMode={\"contain\"}\n                source={require('./img/inverted-square-add.png')}\n              />;\n            }else{\n              return <Image style={styles.image}\n                resizeMode={\"contain\"}\n                source={require('./img/grey-square-add.png')}\n              />;\n            }\n          }else if (route.name === 'Weight Room') {\n            if(focused) {\n              return <Image style={styles.image}\n                resizeMode={\"contain\"}\n                source={require('./img/inverted-man-working.png')}\n              />;\n            }else{\n              return <Image style={styles.image}\n                resizeMode={\"contain\"}\n                source={require('./img/grey-man-working.png')}\n              />;\n            }\n          }else if (route.name === 'Profile') {\n            if(focused) {\n              return <Image style={styles.image}\n                resizeMode={\"contain\"}\n                source={require('./img/inverted-gorilla.png')}\n              />;\n            }else{\n              return <Image style={styles.image}\n                resizeMode={\"contain\"}\n                source={require('./img/grey-gorilla.png')}\n              />;\n            }\n          }\n        },\n        \n        tabBarBackgroundColor: 'white',\n        tabBarActiveTintColor: 'grey',\n        tabBarInactiveTintColor: 'grey',\n        tabBarActiveBackgroundColor: '#2B2118',\n        tabBarInactiveBackgroundColor: '#2B2118',\n      })}>\n        <Tab.Screen name=\"Excercises\" component={AppNav} />\n        <Tab.Screen name=\"Past Workouts\" component={WorkoutHistory} />\n        <Tab.Screen name=\"New Workout\" component={WorkoutHistory} />\n        <Tab.Screen name=\"Weight Room\" component={WorkoutHistory} />\n        <Tab.Screen name=\"Profile\" component={WorkoutHistory} />\n      </Tab.Navigator>\n    </NavigationContainer>\n\n  );\n};\nconst Tab = createBottomTabNavigator();\n\nconst styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    height: '100%',\n  },\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}